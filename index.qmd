---
title: "2024 Presidential Election Prediction"
listing:
  contents: posts
  sort: "date desc"
  type: default
  categories: true
  sort-ui: false
  filter-ui: false
project: 
  type: website
  output-dir: docs 
page-layout: full
title-block-banner: true
---

## Forecast Summary

This week, I share the culmination of my predictive modeling efforts for the 2024 presidential election, focusing on both the national two-party popular vote and the Electoral College outcome. Leveraging multivariate OLS regression models built on a historical dataset from 1968 to 2020, I project that Vice President Kamala Harris will secure the presidency with 51.96% of the popular vote and 319 electoral votes.

**Predictors:**

-   **Q2 GDP Growth**: Captures recent economic performance, as voters tend to focus on the pre-election economy (Achen & Bartels, 2014).

-   **October Polling Averages**: Late polls, weighted by weeks until the election, offer better forecasts (Gelman & King, 1993).

-   **Party Affiliation**: Voter identification with major parties is a strong predictor of vote share (Kim & Zilinsky, 2024).

-   **Incumbency**: Reflects the structural advantage of sitting presidents.

```{r setup, include=FALSE}
# hide code
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, error = FALSE)

# import libraries
library(car)
library(caret)
library(CVXR)
library(glmnet)
library(tidyverse)
library(patchwork)
library(knitr)
library(sjPlot)
library(kableExtra)
library(maps)
library(readr)
library(stringr)
library(readxl)
library(scales)
library(ggpubr)
library(tigris)
library(sf)
library(tools)

# import data

nat_polls <- read_csv("national_polls_1968-2024.csv")
state_polls <- read_csv("state_polls_1968-2024.csv")
econ_data <- read_csv("fred_econ.csv") |>
  filter(quarter == 2)
pop_vote <- read_csv("popvote_1948_2020.csv")
  pop_vote$party[pop_vote$party == "democrat"] <- "DEM"
  pop_vote$party[pop_vote$party == "republican"] <- "REP"
state_pop_vote <- read_csv("state_popvote_1948_2020.csv")
  state_pop_vote <- state_pop_vote |>
    select(year, state, D_pv2p, D_pv2p_lag1)
map_states <- map_data("state") |>
  rename(state = region)
map_states$state <- str_to_title(map_states$state)
electoral_college <- read_csv("corrected_ec_1948_2024.csv") 
  electoral_college <- electoral_college |>
    filter(year == 2024)
expert_predictions <- read_excel("expert_2024.xlsx")
party_affiliations <- read_csv("national_party_id.csv") 
  party_affiliations$party[party_affiliations$party == "democrat"] <- "DEM"
  party_affiliations$party[party_affiliations$party == "republican"] <- "REP"

state_abbrev_xwalk <- state_pop_vote |>
  mutate(state_abb = state.abb[match(state_pop_vote$state, state.name)]) |> 
  select(state, state_abb) |> 
  distinct() 
state_abbrev_xwalk[51,]$state <- "District of Columbia"
state_abbrev_xwalk[51,]$state_abb <- "DC"




```

## Two-Party Vote Model

This model applies a multivariate OLS regression to forecast the national two-party popular vote share for the incumbent party’s candidate. The dependent variable is the percentage of the two-party vote won by the incumbent party, which is defined as the party holding the presidency during the election year. The model leverages historical data spanning from 1968 to 2016, excluding 2020 due to the anomalous economic impacts of the COVID-19 pandemic.

The selection of variables is informed by established research. Achen and Bartels’ work on economic voting underpins the inclusion of Q2 GDP growth, emphasizing voters’ short-term focus on economic conditions. Gelman and King’s analysis of polling accuracy highlights the importance of incorporating October polling data, weighted by proximity to the election, to capture late-stage voter sentiment shifts. The model also considers party affiliation strength, a significant predictor of voting behavior as identified by Kim and Zilinsky, and accounts for the inherent advantages often afforded to incumbents, as explored in electoral behavior literature.

By synthesizing these elements, the model aims to deliver a nuanced prediction of the two-party vote share, acknowledging both economic and political dynamics that influence voter decisions.

### Regression

The model, based on 13 presidential elections from 1968 to 2016, excludes 2020 due to the economic impact of the COVID-19 pandemic. The regression table for the national two-party popular vote is presented below.

```{r national model}
nat_poll <- nat_polls |>
  select(year, state, weeks_left, poll_date, poll_support, party) |>
  filter(month(poll_date) == 10) |>
  group_by(year, party, month = month(poll_date)) |>
  summarize(poll_support = round(weighted.mean(poll_support, weeks_left, na.rm = TRUE), 2), .groups = "drop") |>
  pivot_wider(names_from = month, 
              values_from = poll_support, 
              names_prefix = "month_") |>
  drop_na() |>
  rename(oct_poll = month_10)
nat_model <- pop_vote |> 
  left_join(econ_data, by = "year") |> 
  filter(year >= 1968, 
         incumbent_party) |>
  mutate(incumbent = as.numeric(incumbent)) |>
  left_join(nat_poll, by = c("year", "party")) |>
  left_join(party_affiliations, by = c("year", "party"))
nat_reg <- lm(pv2p ~ GDP_growth_quarterly + oct_poll + two_party_percent + incumbent, 
              data = subset(nat_model, year < 2020))

tab_model(nat_reg, show.se = TRUE, 
          title = "Regression: National Model (1968-2016)", 
          dv.labels = "National Popular Vote Share (Incumbent Party Candidate)")
```

### Coefficients

Most coefficients are significant, except for the two-party percentage and incumbency status.

-   **Q2 GDP Growth**: A 1% rise in Q2 GDP growth leads to a 0.50% increase in the incumbent’s vote share (p = 0.007), indicating a positive relationship.

-   **October Polling Averages**: A 1% increase in October polls corresponds to a 0.47% rise in the incumbent’s vote share (p \< 0.001), making it a strong predictor.

-   **Two-Party Percentage**: A 1% rise adds 0.12% to the vote share, though not statistically significant (p = 0.093).

-   **Incumbent Status**: Incumbency contributes a 1.13% increase in vote share, though not significant (p = 0.327).

Despite their insignificance, two-party percentage and incumbency help prevent omitted variable bias, enhancing the model’s robustness.

**Model Validation**

The model explains 92% of the vote share variation (R-squared = 0.92), with an adjusted R-squared of 0.88, indicating minimal overfitting. Cross-validation, with 1,000 iterations, yielded a mean absolute residual of 3.63, demonstrating strong predictive accuracy, as the national vote share typically varies by nearly 20 points. The accompanying histogram illustrates the distribution of these prediction errors, highlighting the model’s reliability.

The error distribution leans slightly to the right, suggesting that the model sometimes underpredicts the incumbent candidate’s performance more significantly than it overpredicts. The histogram highlights a few outliers with mean absolute errors exceeding 5, indicating instances where the model significantly underestimated the incumbent’s vote share.

This rightward skew isn’t inherently problematic. Election outcomes can be unpredictable, and certain conditions may lead to the incumbent surpassing expectations in some years. Overall, the model shows strong performance, with these assessments reinforcing its reliability in forecasting electoral results.

```{r national model out-of-sample fit, fig.width=10, fig.height=6}
# set seed
set.seed(123456)
out_samp_errors <- sapply(1:1000, function(i) {
  years_out_samp <- sample(nat_model$year, 6)
  mod <- lm(pv2p ~ GDP_growth_quarterly + oct_poll + two_party_percent + incumbent, 
            data = nat_model[!(nat_model$year %in% years_out_samp), ])
  out_samp_pred <- predict(mod, newdata = nat_model[nat_model$year %in% years_out_samp, ])
  if (any(is.na(out_samp_pred)) || any(is.na(nat_model$pv2p[nat_model$year %in% years_out_samp]))) {
    return(NA)
  }
  
  out_samp_truth <- nat_model$pv2p[nat_model$year %in% years_out_samp]
  mean(abs(out_samp_pred - out_samp_truth))
})

out_samp_errors <- na.omit(out_samp_errors)
mean_out_samp_error <- mean(out_samp_errors)

# Natl. model out-of-sample errors from cross validation
ggplot() +
  geom_histogram(mapping = aes(x = out_samp_errors), fill = "#98fb98", binwidth = 0.5) + 
  geom_vline(aes(xintercept = mean_out_samp_error), color = "firebrick", linetype = "dashed", size = 1) + 
  labs(title = "National Model: Out-of-Sample Errors-Cross-Validation",
       x = "Out-of-Sample Mean Absolute Errors",
       y = "Count") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14, vjust = 2)
  )
```

## Predictions for 2024 

```{r national prediction table}
nat_pred_data <- nat_model |>
  filter(year == 2024) |>
  select(GDP_growth_quarterly, oct_poll, two_party_percent) |>
  mutate(incumbent = 0)
# 2024
nat_pred <- predict(nat_reg, nat_pred_data, interval = "prediction")
nat_pred <- round(nat_pred, 2)
knitr::kable(nat_pred, 
             col.names = c("Prediction Value", "Lower Bound", "Upper Bound")) |>
  kableExtra::kable_styling(full_width = FALSE)
```

The national model forecasts Vice President Harris securing 51.96% of the two-party popular vote, leaving former President Trump with 48.04%.

The 95% confidence interval provides a range: at the lower bound, Trump is projected to win 52.54%, with Harris at 47.46%. At the upper bound, Harris could achieve 56.47%, while Trump would receive 43.53%.

The accompanying visualization summarizes these predictions, with the dashed line marking the 50% threshold of the national two-party popular vote.

```{r national prediction viz, fig.width=10, fig.height=3}
harris_vote_share <- nat_pred[1, 1]
trump_vote_share <- 100 - harris_vote_share

vote_share_table <- data.frame(
  candidate = c("Kamala Harris", "Donald Trump"),
  vote_share = c(harris_vote_share, trump_vote_share)
)

ggplot(vote_share_table, aes(x = "", y = vote_share, fill = candidate)) +
  geom_bar(stat = "identity", width = 0.3) + 
  geom_hline(yintercept = 50, linetype = "dashed", color = "gray30", size = 1) + 
  geom_text(aes(label = paste0(vote_share, "%")), position = position_stack(vjust = 0.5), color = "white") + 
  scale_fill_manual(values = c("Kamala Harris" = "#4a90e2", "Donald Trump" = "#c44d58")) +  
  labs(title = "Predicted National Two-Party Popular Vote Share",
       x = NULL,
       y = NULL, 
       fill = "Candidate") +
  theme_minimal() + 
  theme(
    axis.text.x = element_blank(),  
    axis.ticks.x = element_blank(),
    panel.grid.major.y = element_blank(),  
    panel.grid.minor.y = element_blank(),  
    panel.grid.major.x = element_blank(),  
    panel.grid.minor.x = element_blank(),  
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14, vjust = 2),  
    plot.margin = margin(10, 10, 10, 10) 
  ) +
  coord_flip() +  
  ylim(0, 100) + 
  theme(aspect.ratio = 0.4) +
  geom_label(aes(x = 1, y = 50, label = "50%"), color = "gray30", fill = "white", vjust = 4, size = 4, label.size = 0.5)

```

## State-Level Popular Vote & Electoral College Model

Building on the national model approach, a multivariate OLS regression was developed to predict outcomes in 13 key states, shaping the Electoral College forecast.

The dependent variable in this state model is the Democratic candidate's share of the state-level two-party vote (%). Key predictors include:

-   **Lagged Democratic Vote Share:** Two-party vote share from the previous election.

-   **Weighted October Polling Averages:** State-level polls from October, adjusted for proximity to Election Day.

-   **Incumbent Party Status:** Whether the Democratic candidate represents the incumbent party (1) or not (0).

### Why

While the national model explains incumbency at the presidential level, the state model explores party-level incumbency. Historically, only a few incumbent presidents have lost re-election, but their parties have faced more frequent defeats. Additionally, the lagged vote share captures the increasing polarization in voter behavior, where past election results strongly influence future outcomes.

### Model Training

The model was trained on data from 2000 to 2020, focusing on recent voter trends and methodologies. The resulting regression table is presented below.

```{r state model}
state_vote_model <- state_polls |>
  select(year, state, weeks_left, poll_date, poll_support, party) |>
  filter(month(poll_date) == 10,
         party == "DEM", 
         year >= 2000) |>
  group_by(year, state, month = month(poll_date)) |>
  summarize(poll_support = round(weighted.mean(poll_support, weeks_left, na.rm = TRUE), 2), .groups = "drop") |>
  pivot_wider(names_from = month, 
              values_from = poll_support, 
              names_prefix = "month_") |>
  left_join(state_pop_vote, by = c("year", "state")) |>
  select(year, state, month_10, D_pv2p, D_pv2p_lag1) |>
  drop_na() |>
  rename(oct_poll = month_10, 
         lag_vote_share = D_pv2p_lag1) |>
  left_join(pop_vote |>
  select(year, party, incumbent_party) |>
  filter(party == "DEM") |>
  mutate(incumbent_party = if_else(incumbent_party == "TRUE", 1, 0)) |>
  select(-party), by = "year")
state_regression <- lm(D_pv2p ~ lag_vote_share + oct_poll + incumbent_party, 
                       data = subset(state_vote_model, year <= 2020))

tab_model(state_regression, show.se = TRUE, 
          title = "Regression Table for State Vote Model (2000-2020)", 
          dv.labels = "Democratic State-Level Popular Vote Share")

```

### Most coefficients, except incumbent party status, are statistically significant at the 99% confidence level.

-   **Lagged Two-Party Vote Share:** Each 1% increase in the previous election's Democratic vote share results in a 0.45% rise in the current vote share. This is a strong and significant predictor (p \< 0.001).

-   **Weighted October Polling Averages:** A 1% increase in October polling translates to a 0.67% boost in the Democratic vote share, underscoring its predictive strength (p \< 0.001).

-   **Incumbent Party Status:** A marginal decrease of 0.74% in the Democratic vote share occurs with incumbent party status, though this is not statistically significant (p = 0.092).

### Model Validation

The model explains 93% of the variance in state-level vote shares (R-squared = 0.93), indicating a robust fit. The adjusted R-squared remains stable at 0.927, confirming minimal overfitting.

Cross-validation, using 1,000 iterations with half the election years as test sets, yielded a mean absolute error of approximately 2.8. This demonstrates the model’s accuracy in predicting state-level vote shares, which typically range over 20 percentage points. Below is a histogram of out-of-sample errors, with the dashed line indicating the average error.

```{r state_model_cross_validation, fig.width=10, fig.height=6}
# Set seed for reproducibility
set.seed(123456)
cross_val_errors <- sapply(1:1000, function(i) {
  sample_years <- sample(state_vote_model$year, 3)
  cv_model <- lm(D_pv2p ~ lag_vote_share + oct_poll + incumbent_party, 
                 data = state_vote_model[!(state_vote_model$year %in% sample_years), ])
  predictions <- predict(cv_model, newdata = state_vote_model[state_vote_model$year %in% sample_years, ])
  if (any(is.na(predictions)) || any(is.na(state_vote_model$D_pv2p[state_vote_model$year %in% sample_years]))) {
    return(NA)
  }
  
  actual_values <- state_vote_model$D_pv2p[state_vote_model$year %in% sample_years]
  mean(abs(predictions - actual_values))
})

cross_val_errors <- na.omit(cross_val_errors)
average_error <- mean(cross_val_errors)
ggplot() +
  geom_histogram(mapping = aes(x = cross_val_errors), fill = "#B3CDE0", binwidth = 0.5) + 
  geom_vline(aes(xintercept = average_error), color = "#FF5733", linetype = "dashed", size = 1) +
  labs(title = "State Vote Model Out-of-Sample Errors from Cross-Validation",
       x = "Mean Absolute Errors (Out-of-Sample)",
       y = "Frequency") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14, vjust = 2)
  )

```

The histogram of out-of-sample errors shows a mean absolute error around 2.8, indicating the model's generally strong predictive accuracy. Most errors fall between 2 and 4, with the distribution tapering at the edges. While the curve isn't perfectly symmetrical, it demonstrates reliable performance, suggesting the model can predict outcomes within a narrow margin of actual results.

### Swing States

The state model predicts Vice President Harris will secure the Democratic vote share in critical states like Arizona, Georgia, Michigan, and Pennsylvania, while former President Trump is expected to carry Florida and Texas. This analysis focuses on 13 pivotal states, identified by political analysts as crucial to the 2024 election outcome. These include a mix of "Lean Democrat," "Lean Republican," and "Toss-Up" states, emphasizing their potential to swing the election.

Many of these races are highly competitive, with prediction intervals often crossing the 50% threshold, highlighting the uncertain and tightly contested nature of the upcoming election. This is particularly evident in key battlegrounds where small shifts in voter preference could alter the outcome.

A visual representation of these predictions shows the expected Democratic vote share, with black dots marking the predicted values. Blue and red dots illustrate the upper and lower bounds of the confidence intervals, favoring Democrats and Republicans, respectively. The dashed red line at 50% serves as a benchmark, clearly showing how close many states are to tipping either way. This visualization reinforces the model's findings, underscoring the importance of these tightly contested states in shaping the electoral landscape.

```{}
```

```{}
```

### 2024 Electoral College Prediction

The projection assigns the remaining states (based on our given expert forecasts), predicting Vice President Harris with 319 electoral votes and former President Trump with 219. The accompanying Electoral College map highlights Harris's expected path to surpass the 270-vote threshold needed to win.

```{}
```

```{}
```

## Final Thoughts

I’m really looking forward to seeing how the election plays out and comparing the results to my predictions. It’ll be interesting to see where the model might have been accurate and where there might be room for improvement. After the election, I’ll definitely take some time to reflect on what worked, what didn’t, and how I can tweak things for the future.
